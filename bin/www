#!/usr/bin/env node

var debug = require('debug')('server:server');
var http = require('http');

var app = require('../app');
var config = require('../config/config');

app.init(function (err, express) {
  if (err) {
    console.error('Could not initialize application!');
    process.exit(1);
  }
  else {
    startServer(express);
  }
});

function startServer(express) {

  express.set('port', config.port);

  var server = http.createServer(express);

  server.listen(config.port);
  server.on('error', onError);
  server.on('listening', onListening);

  /**
   * Event listener for HTTP server "error" event.
   */

  function onError(error) {
    if (error.syscall !== 'listen') {
      throw error;
    }

    var bind = typeof config.port === 'string'
      ? 'Pipe ' + config.port
      : 'Port ' + config.port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
      case 'EACCES':
        console.error(bind + ' requires elevated privileges');
        process.exit(1);
        break;
      case 'EADDRINUSE':
        console.error(bind + ' is already in use');
        process.exit(1);
        break;
      default:
        throw error;
    }
  }

  /**
   * Event listener for HTTP server "listening" event.
   */

  function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
      ? 'pipe ' + addr
      : 'port ' + addr.port;
    debug('Listening on ' + bind);
  }
}
